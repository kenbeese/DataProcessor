#!/usr/bin/env python
# coding=utf-8
import argparse
import os.path
import sys
import traceback

sys.path = ([sys.path[0]]
            + [os.path.join(os.path.dirname(__file__), "../lib")]
            + sys.path[1:])
import dataprocessor as dp
sys.path = [sys.path[0]] + sys.path[2:]


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument("-o", "--output", action="store_true",
                        help="filename of output JSON file")
    parser.add_argument("-s", "--silent", action="store_true",
                        help="Does not ask whether REPLACE JSON file")
    parser.add_argument("filename")
    sub_psr = parser.add_subparsers()

    for name, val in dp.pipes.pipes_dics.items():
        pipe_psr = sub_psr.add_parser(name, help=val["desc"])
        for arg in val["args"]:
            pipe_psr.add_argument(arg)
        pipe_psr.set_defaults(val=val)

    args = parser.parse_args()
    with dp.io.SyncDataHandler(args.filename, silent=args.silent) as dh:
        arguments = [vars(args)[i] for i in args.val["args"]]
        args.val["func"](dh.get(), *arguments)
