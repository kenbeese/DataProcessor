#!/usr/bin/env python
# coding=utf-8
"""Execute all test of this project."""
import os.path
import sys

sys.path = [sys.path[0]] \
    + [os.path.join(os.path.dirname(__file__), "../lib")] \
    + sys.path[1:]
import dataprocessor as dp
import handler
sys.path = [sys.path[0]] + sys.path[2:]

sys.path = [sys.path[0]] \
    + [os.path.join(os.path.dirname(__file__), "../test")] \
    + sys.path[1:]
import test_dataprocessor as tdp
sys.path = [sys.path[0]] + sys.path[2:]


doctest_modules = [dp.io,
                   dp.utility,
                   dp.execute,
                   dp.nodes,
                   dp.dataframe,
                   dp.table,
                   dp.figure,
                   dp.pipes.addcomment,
                   dp.pipes.scan,
                   handler]

test_moudles = [tdp.test_pipes.test_configure,
                tdp.test_pipes.test_scan,
                tdp.test_pipes.test_add_node,
                tdp.test_nodes,
                tdp.test_dataframe,
                tdp.test_utility,
                tdp.test_io, ]


def create_doctest_suite(test_suite):
    from doctest import DocTestSuite
    for module in doctest_modules:
        test_suite.addTest((DocTestSuite(module)))
    return test_suite


def create_test_suite(test_suite):
    from unittest import TestLoader
    loader = TestLoader()
    for module in test_moudles:
        test_suite.addTest(loader.loadTestsFromModule(module))
    return test_suite


def main():
    from unittest import TextTestRunner, TestSuite
    suite = TestSuite()
    suite = create_doctest_suite(suite)
    suite = create_test_suite(suite)
    TextTestRunner(verbosity=2).run(suite)
    return


if __name__ == "__main__":
    main()
