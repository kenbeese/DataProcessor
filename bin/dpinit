#!/usr/bin/env python
# coding=utf-8

import os.path
import sys
import traceback
import ConfigParser

sys.path = ([sys.path[0]]
            + [os.path.join(os.path.dirname(__file__), "../lib")]
            + sys.path[1:])
import dataprocessor as dp
sys.path = [sys.path[0]] + sys.path[2:]


def create_configure_file():
    rcpath = dp.utility.path_expand(dp.rc.default_rcpath)
    rc_section = dp.rc.rc_section

    if os.path.exists(rcpath):
        print("There already exists : " + rcpath)
        ans = raw_input("Replace? [y/N]")
        if ans not in ["y", "yes", "Yes", "YES", "Y"]:
            print("Nothing has done")
            sys.exit(1)

    print("Creating " + rcpath)
    root = raw_input("Enter your Root direcotry: ")
    root_dir = dp.utility.get_directory(root)
    default_path = os.path.join(root_dir, "data.json")
    json_path = raw_input("Enter path of your data json (default:{}): "
                          .format(default_path))
    if not json_path:
        json_path = default_path
    json_path = dp.utility.path_expand(json_path)
    if not os.path.exists(json_path):
        print("Creating " + json_path)
        with open(json_path, "w") as f:
            f.write("[]")

    cfg = ConfigParser.RawConfigParser()
    cfg.add_section(rc_section)
    cfg.set(rc_section, "root", root_dir)
    cfg.set(rc_section, "json", json_path)

    with open(rcpath, 'wb') as f:
        cfg.write(f)
    print("Your configure file: " + rcpath + " is successfully created")


if __name__ == '__main__':
    try:
        create_configure_file()
    except dp.exception.DataProcessorError as e:
        print(traceback.format_exc())
        print("=*= ERROR =*=")
        print("Message: %s" % e.msg)
        sys.exit(1)
